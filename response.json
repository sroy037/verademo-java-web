{
  "_embedded": {
    "findings": [
      {
        "issue_id": 3,
        "scan_type": "STATIC",
        "description": "<span>This call to jQueryResult.attr() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. </span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>",
        "count": 1,
        "context_type": "APPLICATION",
        "context_guid": "21b3a4bc-0876-44e2-823e-7e5934d09e36",
        "violates_policy": true,
        "finding_status": {
          "first_found_date": "2023-09-20T18:47:12.228Z",
          "status": "OPEN",
          "resolution": "UNRESOLVED",
          "mitigation_review_status": "NONE",
          "new": false,
          "resolution_status": "PROPOSED",
          "last_seen_date": "2024-08-19T15:26:10.820Z"
        },
        "finding_details": {
          "severity": 3,
          "cwe": {
            "id": 80,
            "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
            "href": "https://api.veracode.com/appsec/v1/cwes/80"
          },
          "file_name": "profile.jsp",
          "module": "verademo.war_htmljscode.veracodegen.htmla.jsa",
          "relative_location": -1,
          "finding_category": {
            "id": 20,
            "name": "Cross-Site Scripting (XSS)",
            "href": "https://api.veracode.com/appsec/v1/categories/20"
          },
          "procedure": "lambda_3",
          "exploitability": 1,
          "attack_vector": "jQueryResult.attr",
          "file_line_number": 247
        },
        "build_id": 40061778
      },
      {
        "issue_id": 4,
        "scan_type": "STATIC",
        "description": "<span>This call to jQueryResult.append() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. </span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>",
        "count": 1,
        "context_type": "APPLICATION",
        "context_guid": "21b3a4bc-0876-44e2-823e-7e5934d09e36",
        "violates_policy": true,
        "finding_status": {
          "first_found_date": "2023-09-20T18:47:12.228Z",
          "status": "OPEN",
          "resolution": "UNRESOLVED",
          "mitigation_review_status": "NONE",
          "new": false,
          "resolution_status": "PROPOSED",
          "last_seen_date": "2024-08-19T15:26:10.820Z"
        },
        "finding_details": {
          "severity": 3,
          "cwe": {
            "id": 80,
            "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
            "href": "https://api.veracode.com/appsec/v1/cwes/80"
          },
          "file_name": "profile.jsp",
          "module": "verademo.war_htmljscode.veracodegen.htmla.jsa",
          "relative_location": -1,
          "finding_category": {
            "id": 20,
            "name": "Cross-Site Scripting (XSS)",
            "href": "https://api.veracode.com/appsec/v1/categories/20"
          },
          "procedure": "lambda_2",
          "exploitability": 1,
          "attack_vector": "jQueryResult.append",
          "file_line_number": 252
        },
        "build_id": 40061778
      },
      {
        "issue_id": 5,
        "scan_type": "STATIC",
        "description": "<span>This call to jQueryResult.append() contains a cross-site scripting (XSS) flaw.  The application populates the HTTP response with untrusted input, allowing an attacker to embed malicious content, such as Javascript code, which will be executed in the context of the victim's browser.  XSS vulnerabilities are commonly exploited to steal or manipulate cookies, modify presentation of content, and compromise confidential information, with new attack vectors being discovered on a regular basis. </span> <span>Use contextual escaping on all untrusted data before using it to construct any portion of an HTTP response.  The escaping method should be chosen based on the specific use case of the untrusted data, otherwise it may not protect fully against the attack. For example, if the data is being written to the body of an HTML page, use HTML entity escaping; if the data is being written to an attribute, use attribute escaping; etc.  Both the OWASP Java Encoder library and the Microsoft AntiXSS library provide contextual escaping methods. For more details on contextual escaping, see https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.md. In addition, as a best practice, always validate untrusted input to ensure that it conforms to the expected format, using centralized data validation routines when possible.</span> <span>References: <a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE</a> <a href=\"https://owasp.org/www-community/attacks/xss/\">OWASP</a> <a href=\"https://docs.veracode.com/r/review_cleansers\">Supported Cleansers</a></span>",
        "count": 1,
        "context_type": "APPLICATION",
        "context_guid": "21b3a4bc-0876-44e2-823e-7e5934d09e36",
        "violates_policy": true,
        "finding_status": {
          "first_found_date": "2023-09-20T18:47:12.228Z",
          "status": "OPEN",
          "resolution": "UNRESOLVED",
          "mitigation_review_status": "NONE",
          "new": false,
          "resolution_status": "NONE",
          "last_seen_date": "2024-08-19T15:26:10.820Z"
        },
        "finding_details": {
          "severity": 3,
          "cwe": {
            "id": 80,
            "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
            "href": "https://api.veracode.com/appsec/v1/cwes/80"
          },
          "file_name": "feed.jsp",
          "module": "verademo.war_htmljscode.veracodegen.htmla.jsa",
          "relative_location": -1,
          "finding_category": {
            "id": 20,
            "name": "Cross-Site Scripting (XSS)",
            "href": "https://api.veracode.com/appsec/v1/categories/20"
          },
          "procedure": "lambda_1",
          "exploitability": 1,
          "attack_vector": "jQueryResult.append",
          "file_line_number": 174
        },
        "build_id": 40061778
      }
    ]
  },
  "_links": {
    "self": {
      "href": "https://api.veracode.com/appsec/v2/applications/21b3a4bc-0876-44e2-823e-7e5934d09e36/findings{?context,severity,severity_gte,cwe,finding_category,cvss,cvss_gte,cve,violates_policy,include_annot,new,include_exp_date,mitigated_after,sca_scan_mode,sca_dep_mode,scan_type}",
      "templated": true
    },
    "application": {
      "href": "https://api.veracode.com/appsec/v1/applications/21b3a4bc-0876-44e2-823e-7e5934d09e36"
    },
    "sca": {
      "href": "https://api.veracode.com/appsec/v2/applications/21b3a4bc-0876-44e2-823e-7e5934d09e36/findings?scan_type=SCA{&context,severity,severity_gte,cwe,finding_category,cvss,cvss_gte,cve,violates_policy,include_annot,new,include_exp_date,mitigated_after,sca_scan_mode,sca_dep_mode}",
      "templated": true
    }
  },
  "page": {
    "size": 20,
    "total_elements": 3,
    "total_pages": 1,
    "number": 0
  }
}
